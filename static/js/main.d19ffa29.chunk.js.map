{"version":3,"sources":["component/GoodsLIst.js","App.js","index.js"],"names":["GoodsList","_ref","goods","react_default","a","createElement","className","map","good","goodsFromServer","listBySelect","elem","length","sort","b","filter","i","arr","indexOf","App","state","isListShown","copiedList","concat","selectedValue","setSelectValue","event","_this","setState","target","value","Number","handleStart","prevState","reverseList","reverse","sortByAlphabet","resetList","sortByLength","_this$state","this","type","onClick","Fragment","name","onChange","key","GoodsLIst","React","Component","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"4LAkBeA,MAdf,SAAAC,GAA8B,IAATC,EAASD,EAATC,MACnB,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXJ,EAAMK,IAAI,SAAAC,GAAI,OACbL,EAAAC,EAAAC,cAAA,SAAIG,OCFNC,SAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGIC,EAAeD,EAClBF,IAAI,SAAAI,GAAI,OAAIA,EAAKC,SACjBC,KAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAIU,IACnBC,OAAO,SAACJ,EAAMK,EAAGC,GAAV,OAAkBD,IAAMC,EAAIC,QAAQP,KAuI/BQ,6MApIbC,MAAQ,CACNC,aAAa,EACbC,WAAU,GAAAC,OAAMd,GAChBe,cAAe,KAGjBC,eAAiB,SAAAC,GAAK,OACpBC,EAAKC,SAAS,CACZJ,cAAeE,EAAMG,OAAOC,MAC5BR,WAAY,GAAAC,OAAId,GACbM,OAAO,SAAAJ,GAAI,OAAIA,EAAKC,SAAWmB,OAAOL,EAAMG,OAAOC,cAI1DE,YAAc,kBACZL,EAAKC,SAAS,SAAAK,GAAS,MAAK,CAC1BZ,aAAcY,EAAUZ,kBAI5Ba,YAAc,kBACZP,EAAKC,SAAS,CACZN,WAAY,GAAAC,OAAId,GAAiB0B,eAIrCC,eAAiB,kBACfT,EAAKC,SAAS,CACZN,WAAY,GAAAC,OAAId,GAAiBI,YAIrCwB,UAAY,kBACVV,EAAKC,SAAS,CACZN,WAAU,GAAAC,OAAMd,QAIpB6B,aAAe,kBACbX,EAAKC,SAAS,CACZN,WAAY,GAAAC,OAAId,GAAiBI,KAAK,SAACT,EAAGU,GAAJ,OAAUV,EAAEQ,OAASE,EAAEF,oFAIxD,IAAA2B,EAC4CC,KAAKpB,MAAhDE,EADDiB,EACCjB,WAAYE,EADbe,EACaf,cAAeH,EAD5BkB,EAC4BlB,YAEjCI,EAMEe,KANFf,eACAO,EAKEQ,KALFR,YACAE,EAIEM,KAJFN,YACAE,EAGEI,KAHFJ,eACAC,EAEEG,KAFFH,UACAC,EACEE,KADFF,aAGF,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEVe,GAEClB,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVmC,KAAK,SACLC,QAASV,GAHX,SAUFX,GAEElB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuC,SAAA,KACExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVmC,KAAK,SACLC,QAASJ,GAHX,kBAQAnC,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVmC,KAAK,SACLC,QAASL,GAHX,SAQAlC,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVmC,KAAK,SACLC,QAASN,GAHX,sBAQAjC,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVmC,KAAK,SACLC,QAASR,GAHX,YASF/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVwB,MAAON,EACPoB,KAAK,YACLC,SAAUpB,GAEVtB,EAAAC,EAAAC,cAAA,UAAQyB,MAAO,GAAf,KACCpB,EAAaH,IAAI,SAAAI,GAAI,OACpBR,EAAAC,EAAAC,cAAA,UAAQyC,IAAKnC,EAAMmB,MAAOnB,GAAOA,OAKvCR,EAAAC,EAAAC,cAAC0C,EAAD,CACE7C,MAAOoB,aA3HL0B,IAAMC,WCnBxBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAKC,KAAM,MAASC,SAASC,eAAe","file":"static/js/main.d19ffa29.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nfunction GoodsList({ goods }) {\n  return (\n    <ul className=\"goods-list\">\n      {goods.map(good => (\n        <p>{good}</p>\n      ))}\n    </ul>\n  );\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf().isRequired,\n};\n\nexport default GoodsList;\n","import React from 'react';\n\nimport GoodsList from './component/GoodsLIst';\n\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst listBySelect = goodsFromServer\n  .map(elem => elem.length)\n  .sort((a, b) => a - b)\n  .filter((elem, i, arr) => i === arr.indexOf(elem));\n\nclass App extends React.Component {\n  state = {\n    isListShown: false,\n    copiedList: [...goodsFromServer],\n    selectedValue: 0,\n  }\n\n  setSelectValue = event => (\n    this.setState({\n      selectedValue: event.target.value,\n      copiedList: [...goodsFromServer]\n        .filter(elem => elem.length === Number(event.target.value)),\n    })\n  );\n\n  handleStart = () => (\n    this.setState(prevState => ({\n      isListShown: !prevState.isListShown,\n    }))\n  )\n\n  reverseList = () => (\n    this.setState({\n      copiedList: [...goodsFromServer].reverse(),\n    })\n  )\n\n  sortByAlphabet = () => (\n    this.setState({\n      copiedList: [...goodsFromServer].sort(),\n    })\n  )\n\n  resetList = () => (\n    this.setState({\n      copiedList: [...goodsFromServer],\n    })\n  )\n\n  sortByLength = () => (\n    this.setState({\n      copiedList: [...goodsFromServer].sort((a, b) => a.length - b.length),\n    })\n  )\n\n  render() {\n    const { copiedList, selectedValue, isListShown } = this.state;\n    const {\n      setSelectValue,\n      handleStart,\n      reverseList,\n      sortByAlphabet,\n      resetList,\n      sortByLength,\n    } = this;\n\n    return (\n      <div className=\"App\">\n\n        { !isListShown\n          && (\n            <button\n              className=\"button-start\"\n              type=\"button\"\n              onClick={handleStart}\n            >\n              Start\n            </button>\n          )\n        }\n\n        { isListShown\n          && (\n            <>\n              <div className=\"buttons-goods\">\n                <button\n                  className=\"button-goods\"\n                  type=\"button\"\n                  onClick={sortByLength}\n                >\n                  Sort by length\n                </button>\n\n                <button\n                  className=\"button-goods\"\n                  type=\"button\"\n                  onClick={resetList}\n                >\n                  Reset\n                </button>\n\n                <button\n                  className=\"button-goods\"\n                  type=\"button\"\n                  onClick={sortByAlphabet}\n                >\n                  Sort by alphabetic\n                </button>\n\n                <button\n                  className=\"button-goods\"\n                  type=\"button\"\n                  onClick={reverseList}\n                >\n                  Reverse\n                </button>\n              </div>\n\n              <div>\n                <select\n                  className=\"select-goods\"\n                  value={selectedValue}\n                  name=\"goodsList\"\n                  onChange={setSelectValue}\n                >\n                  <option value={0}>0</option>\n                  {listBySelect.map(elem => (\n                    <option key={elem} value={elem}>{elem}</option>\n                  ))}\n                </select>\n              </div>\n\n              <GoodsList\n                goods={copiedList}\n              />\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}